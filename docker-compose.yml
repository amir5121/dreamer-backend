version: "3.8"

services:
  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx:/etc/nginx/templates
    ports:
      - "8080:80"
    environment:
      UPSTREAM_HTTP: web_http
      UPSTREAM_PORT: 8486

  web_http:
    build: ${DREAMER_WEB_PATH}
    restart: always
    image: dreamer/backend
    user: dreamer
    volumes:
      - dreamer_backend_source:/srv/dreamer
      - dreamer_backend_static:/srv/dreamer/backend_static
      - dreamer_logs:/var/log/dreamer
    env_file:
      - .env
    environment:
      DB_SERVICE: postgres
      REDIS_SERVICE: redis
    networks:
      - dreamer-web
    depends_on:
      - postgres
      - redis
    command: uwsgi --ini /srv/dreamer/runner/uwsgi.ini

  redis:
    image: redis:5.0-alpine
    restart: always
    networks:
      - dreamer-web

  postgres:
    build: ${POSTGRES_DOCKER_PATH}
    restart: always
    image: dreamer-postgres
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - dreamer_postgres_data:/var/lib/postgresql/data
      - ${POSTGRES_INIT_SCRIPT}:/docker-entrypoint-initdb.d/init.sh
      - ${POSTGRES_CONFIG}:/etc/postgresql/postgresql.conf
      # - ${POSTGRES_LOG}:/var/log/postgresql
    networks:
      - dreamer-web
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3.8-alpine
    restart: always
    networks:
      - dreamer-web

networks:
  dreamer-web:
    name: ${NETWORK_PREFIX}-dreamer-web
    driver: bridge

volumes:
  dreamer_backend_source:
    name: dreamer_backend_source
    driver: local
    driver_opts:
      type: non
      device: ${DREAMER_WEB_PATH}/src
      o: bind

  dreamer_backend_static:
    name: dreamer_backend_static
    driver: local
    driver_opts:
      type: non
      device: ${DREAMER_WEB_PATH}/src/backend_static
      o: bind

  dreamer_postgres_data:
    name: dreamer_postgres_data
    driver: local
    driver_opts:
      type: non
      device: ${POSTGRES_DATA}
      o: bind

  dreamer_logs:
    name: dreamer_logs
    driver: local
    driver_opts:
      type: non
      device: ${LOG_PATH}
      o: bind
